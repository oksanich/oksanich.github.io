/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: "Roboto Regular";
  src: url("../fonts/roboto-regular.woff2") format("woff2"), url("../fonts/roboto-regular.woff") format("woff"); }

@font-face {
  font-family: "Roboto Medium";
  src: url("../fonts/roboto-medium.woff2") format("woff2"), url("../fonts/roboto-medium.woff") format("woff"); }

@font-face {
  font-family: "Roboto Bold";
  src: url("../fonts/roboto-bold.woff2") format("woff2"), url("../fonts/roboto-bold.woff") format("woff"); }

* {
  box-sizing: border-box; }

html {
  font-size: 62.5% !important;
  min-height: 100%;
  height: 100%; }

body {
  font-family: "Roboto Regular", sans-serif;
  font-size: 1.8rem;
  min-height: 100%;
  height: 100%;
  line-height: 1.2; }

a {
  text-decoration: none; }

.page-wrap {
  display: -ms-flexbox;
  display: flex;
  min-height: 100vh; }

.content-wrap {
  background-image: linear-gradient(48deg, #eeeeee, #fafafa);
  width: 100%;
  padding: 3.2rem 3.2rem 6.4rem; }

.content {
  min-height: 100%;
  min-width: 77.2rem;
  max-width: 95.2rem; }

.logo {
  color: #fff;
  font-family: "Roboto Bold", sans-serif;
  font-size: 1.8rem;
  line-height: 1.33;
  text-transform: uppercase; }

.menu-icon {
  color: #fff;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  margin-right: 1.9rem; }
  .menu-icon:hover {
    opacity: .8; }

_:-ms-fullscreen, :root .msie11 {
  min-height: 100vh; }

.btn-wrap--sidebar {
  margin-top: 2.5rem; }

.btn {
  transition: background 0.15s linear;
  background: rgba(255, 255, 255, 0.95);
  border: 0.1rem solid #000;
  border-radius: .4rem;
  box-shadow: 0 0 0.1rem 0 rgba(0, 0, 0, 0.2), 0 0.1rem 0.2rem 0 rgba(0, 0, 0, 0.1);
  color: black;
  cursor: pointer;
  display: inline-block;
  font-size: 1.4rem;
  line-height: 1.43;
  padding: .6rem 3.4rem;
  text-align: center;
  text-decoration: none; }
  .btn:focus, .btn:active, .btn:hover {
    transition: background 0.15s linear; }
  .btn:hover {
    background: #ffd840;
    color: #303030; }

.checkbox {
  cursor: pointer; }

.checkbox__text {
  color: rgba(0, 0, 0, 0.9);
  font-size: 1.4rem;
  margin-right: 2rem; }

.checkbox__custom:not(checked) {
  position: absolute;
  opacity: 0; }

.checkbox__custom:not(checked) + label {
  position: relative;
  padding: 0 6rem 0 0; }

.checkbox__custom:not(checked) + label:before {
  content: '';
  position: absolute;
  top: .2rem;
  left: 0;
  width: 4rem;
  height: 2rem;
  border-radius: 1.3rem;
  background-color: rgba(0, 0, 0, 0.05);
  transition: all .7s; }

.checkbox__custom:not(checked) + label:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 2.4rem;
  height: 2.4rem;
  border-radius: 1.2rem;
  background: #FFF;
  box-shadow: 0 0.1rem 0.2rem 0 rgba(0, 0, 0, 0.2), 0 0.1rem 0.4rem 0 rgba(0, 0, 0, 0.1), 0 0 0.1rem 0 rgba(0, 0, 0, 0.2);
  transition: all .3s; }

.checkbox__custom:checked + label:before {
  background-color: #303030;
  transition: all .7s; }

.checkbox__custom:checked + label:after {
  left: 17px; }

.checkbox__custom:focus + label:after {
  box-shadow: 0 0 0 0.5rem rgba(255, 216, 64, 0.5); }

.checkbox__custom:active + label:after {
  width: 2.8rem;
  transition: all .2s; }

.checkbox__custom:active + label:before {
  background-color: rgba(0, 0, 0, 0.1); }

.checkbox__custom:checked:active + label:before {
  background-color: #ffd840; }

.tabs {
  background: rgba(255, 255, 255, 0.9);
  border-radius: .4rem; }

.tabs__list {
  list-style: none;
  display: -ms-flexbox;
  display: flex;
  margin: 0;
  padding: 0; }

.tabs__item {
  transition: background 0.15s linear;
  border-bottom: 0.1rem solid rgba(0, 0, 0, 0.1);
  cursor: pointer;
  font-size: 1.4rem;
  -ms-flex-positive: 1;
      flex-grow: 1;
  padding: 1.5rem 1rem 1.6rem;
  text-align: center; }
  .tabs__item:focus, .tabs__item:active, .tabs__item:hover {
    transition: background 0.15s linear; }
  .tabs__item:hover {
    background: rgba(0, 0, 0, 0.1);
    border-bottom: 0.2rem solid #303030;
    padding-bottom: 1.5rem; }
  .tabs__item:first-child {
    border-radius: .4rem 0 0 0; }
  .tabs__item:last-child {
    border-radius: 0 .4rem 0 0; }
  .tabs__item.active {
    border-bottom: 0.2rem solid #303030;
    padding-bottom: 1.5rem; }

.tabs__filter {
  border-bottom: 0.1rem solid rgba(0, 0, 0, 0.1);
  padding: 3.1rem 4.8rem 2.7rem; }

.tabs__filter-label {
  color: rgba(0, 0, 0, 0.9);
  font-size: 1.4rem; }

.tabs__content {
  padding: 3.2rem 0 3.2rem 1.6rem; }

.tabs__info {
  color: #26bf6e;
  width: 20rem;
  margin-right: 1.6rem;
  font-size: 0; }

.tabs__info-icon {
  display: inline-block;
  margin-left: .8rem;
  margin-right: 1rem;
  vertical-align: middle; }
  .tabs__info-icon .icon {
    font-size: 1.2rem; }

.tabs__info-text {
  display: inline-block;
  font-size: 1.4rem;
  vertical-align: middle; }

.tabs__content {
  display: -ms-flexbox;
  display: flex; }

.profiles-wrap {
  font-size: 0;
  width: calc(100% - 20rem); }

.profile {
  display: inline-block;
  padding-right: 1.6rem;
  margin-bottom: 2.8rem;
  vertical-align: top;
  width: 25%; }
  .profile:hover {
    cursor: pointer;
    opacity: .9; }
  @media only screen and (max-width: 1360px) {
    .profile {
      width: 33.3%; } }
  .profile--add:hover .profile__img--add {
    background: rgba(0, 0, 0, 0.1);
    opacity: 1; }
  .profile--add:hover .profile__img-icon {
    opacity: 1; }

.profile__img {
  background: rgba(0, 0, 0, 0.05);
  border: 0.1rem solid rgba(0, 0, 0, 0.05);
  border-radius: 50%;
  margin-bottom: .4rem;
  width: 100%; }
  .profile__img--add {
    position: relative;
    box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.4);
    padding: 50% 0;
    border: none;
    text-align: center; }

.profile__img-icon {
  display: inline-block;
  left: calc(50% - .5rem);
  top: calc(50% - .5rem);
  position: absolute;
  opacity: .6; }
  .profile__img-icon .icon {
    font-size: 1rem; }

.profile__name {
  color: rgba(0, 0, 0, 0.9);
  font-size: 1.4rem;
  text-align: center;
  line-height: 1.71; }

.sidebar {
  background: #303030;
  max-width: 50.8rem;
  min-width: 32rem;
  width: 100%; }
  @media only screen and (max-width: 1360px) {
    .sidebar {
      max-width: 44.4rem; } }

.sidebar__section {
  border-bottom: 0.1rem solid rgba(255, 255, 255, 0.2);
  padding-bottom: 1.1rem; }
  .sidebar__section--header {
    padding: 1.9rem 1.6rem 1.5rem; }
  .sidebar__section:last-child {
    border-bottom: none; }

.sidebar__section-title {
  color: rgba(255, 255, 255, 0.9);
  padding: 0 1.6rem;
  font-size: 1.2rem;
  line-height: 2; }

.sidebar__item {
  transition: background 0.15s linear;
  -ms-flex-align: center;
      align-items: center;
  color: #fff;
  display: block;
  font-size: 0;
  padding: 1.2rem 1.6rem; }
  .sidebar__item:focus, .sidebar__item:active, .sidebar__item:hover {
    transition: background 0.15s linear; }
  .sidebar__item:hover {
    background: #ffd840; }
    .sidebar__item:hover .sidebar__item-title {
      color: #303030;
      font-family: "Roboto Bold", sans-serif; }
  .sidebar__item.active {
    background: #ffd840; }
    .sidebar__item.active .sidebar__item-title {
      color: #303030;
      font-family: "Roboto Bold", sans-serif; }

.sidebar__item-img {
  background: rgba(255, 255, 255, 0.6);
  border-radius: 50%;
  display: inline-block;
  height: 4.8rem;
  margin-right: 1.6rem;
  width: 4.8rem;
  vertical-align: middle; }

.sidebar__item-title {
  color: inherit;
  display: inline-block;
  font-size: 1.4rem;
  font-family: "Roboto Regular", sans-serif;
  line-height: 1.71;
  vertical-align: middle;
  width: calc(100% - 6.4rem); }

.icon {
  display: inline-block;
  fill: currentColor;
  height: 1em;
  width: 1em; }

.icon-check {
  font-size: 1.8rem;
  width: 1em; }

.icon-menu {
  font-size: 1.8rem;
  width: 1em; }

.icon-plus {
  font-size: 1.8rem;
  width: 1em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
